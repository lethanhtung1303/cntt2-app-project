openapi: 3.0.0
info:
  title: Web Project API
  description: Api connect to Database
  version: 0.0.1
  license:
    name: TDTU Web Project
servers:
  - url: http://XXXXX/v1
    description: Develop server
  - url: http://XXXXX.com
    description: Product server
paths:

  #    Start here

  /v1/lecturer:
    get:
      tags:
        - Lecturer
      summary: Api for get Lecturer
      operationId: lecturer
      parameters:
        - name: lecturerIds
          in: query
          schema:
            type: string
            pattern: '^(\d{1,19},)*\d{1,19}$'
            description: List ID of Lecturer
            example: '200'
      responses:
        400:
          $ref: '#/components/responses/webApiValidationError'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
        200:
          description: Lecturer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LecturerResponse'

  /v1/login:
    post:
      tags:
        - Authentication
      summary: Api for login
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        400:
          $ref: '#/components/responses/webApiValidationError'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
        200:
          description: Product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

  #    End here

components:
  parameters:
    xForwardedRole:
      in: header
      name: x-forwarder-role
      required: true
      schema:
        type: string
    xForwardedEmployeeId:
      in: header
      name: x-forwarder-employee-id
      required: true
      schema:
        type: string
    xForwardedUser:
      in: header
      name: x-forwarder-user
      required: true
      schema:
        type: string
  schemas:
    WebApiErrorResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
          example: 200
        results:
          type: array
          items:
            $ref: '#/components/schemas/WebApiErrorDetails'
    WebApiErrorDetails:
      type: object
      properties:
        field:
          type: string
        errorCd:
          type: string
        message:
          type: string
        errorIdList:
          type: array
          items:
            type: integer
            example: 1
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
          example: 400
        message:
          type: string

    #    Start here

    LecturerResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
          example: 200
        results:
          type: object
          properties:
            lecturers:
              description: Lecturer list
              type: array
              items:
                $ref: '#/components/schemas/LecturerDetailResponse'
            resultsTotalCount:
              description: Number of Lecturer with condition
              type: integer
              format: int64
              example: 1000
    LecturerDetailResponse:
      type: object
      properties:
        id:
          type: number
          description: ID of Lecturer
          example: 200
        firstName:
          type: string
          description: First Name of Lecturer
          example: 'firstName'
        fullName:
          type: string
          description: Full Name of Lecturer
          example: 'fullName'
        gender:
          type: boolean
          description: Gender of Lecturer
          example: true
        images:
          type: string
          description: Images of Lecturer
          example: 'images'
        birthday:
          type: string
          description: Birthday of Lecturer
          example: 'Birthday'
        placeOfBirth:
          type: string
          description: Place Of Birth of Lecturer
          example: 'placeOfBirth'
        address:
          type: string
          description: Address of Lecturer
          example: 'address'
        addressTmp:
          type: string
          description: Address Tmp of Lecturer
          example: 'addressTmp'
        phone:
          type: string
          description: Phone of Lecturer
          example: 'phone'
        email:
          type: string
          description: Email of Lecturer
          example: 'email'
        emailTdtu:
          type: string
          description: Email TDTU of Lecturer
          example: 'emailTdtu'
        workplace:
          type: string
          description: Workplace of Lecturer
          example: 'workplace'
        mainPosition:
          type: string
          description: Main Position of Lecturer
          example: 'mainPosition'
        secondaryPosition:
          type: string
          description: Secondary Position of Lecturer
          example: 'secondaryPosition'
        classificationLecturers:
          $ref: '#/components/schemas/ClassificationLecturers'
        certificate:
          description: Certificates of Lecturer
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
        trainingProcess:
          description: Training Process of Lecturer
          type: array
          items:
            $ref: '#/components/schemas/TrainingProcess'
        satisfactionScore:
          description: Satisfaction Score of Lecturer
          type: array
          items:
            $ref: '#/components/schemas/SatisfactionScore'
        isActive:
          type: boolean
          description: Is active of Lecturer
          example: true
        createdAt:
          type: string
          description: Created At of Lecturer
          example: 'createdAt'
        createdBy:
          type: string
          description: Created By of Lecturer
          example: 'createdBy'
        updatedAt:
          type: string
          description: Updated At of Lecturer
          example: 'updatedAt'
        updateBy:
          type: string
          description: Updated By of Lecturer
          example: 'updateBy'
        deletedFlag:
          type: boolean
          description: Deleted Flag of Lecturer
          example: true
        deletedAt:
          type: string
          description: Deleted At of Lecturer
          example: 'deletedAt'
        deletedBy:
          type: string
          description: Deleted By of Lecturer
          example: 'deletedBy'
    ClassificationLecturers:
      description: Classification Lecturers
      type: object
      properties:
        maLoai:
          type: number
          description: Ma Loai of Classification Lecturers
          example: 200
        phanLoai:
          type: string
          description: Classification Lecturers
          example: 'phanLoai'
    Certificate:
      description: Certificate
      type: object
      properties:
        id:
          type: number
          description: Id of Certificate
          example: 200
        loaiChungChi:
          type: string
          description: Loai chung chi
          example: 'loaiChungChi'
        diem:
          type: number
          description: Diem of Certificate
          example: 200
    TrainingProcess:
      description: Training Process
      type: object
      properties:
        id:
          type: number
          description: Id of Training Process
          example: 200
        level:
          $ref: '#/components/schemas/Level'
        language:
          description: Languages of Training Process
          type: array
          items:
            $ref: '#/components/schemas/Language'
        truong:
          type: string
          description: Truong of Training Process
          example: 'truong'
        nganh:
          type: string
          description: Nganh of Training Process
          example: 'nganh'
        namTotNghiep:
          type: number
          description: Nam tot nghiep of Training Process
          example: 'namTotNghiep'
        deTaiTotNghiep:
          type: string
          description: De tai tot nghiep of Training Process
          example: 'deTaiTotNghiep'
        nguoiHuongDan:
          type: string
          description: Nguoi huong dan of Training Process
          example: 'nguoiHuongDan'
        loaiTotNghiep:
          type: string
          description: Loai tot nghiep of Training Process
          example: 'loaiTotNghiep'
    Level:
      description: Level
      type: object
      properties:
        id:
          type: number
          description: id of Level
          example: 200
        trinhDo:
          type: string
          description: Level
          example: 'trinhDo'
        kyHieu:
          type: string
          description: Ki hieu
          example: 'kyHieu'
        displayOrder:
          type: number
          description: Display order of Level
          example: 200
    Language:
      description: Language
      type: object
      properties:
        id:
          type: number
          description: id of Language
          example: 200
        tenNgonNgu:
          type: string
          description: Language
          example: 'tenNgonNgu'
    SatisfactionScore:
      description: Satisfaction score
      type: object
      properties:
        id:
          type: number
          description: id of Satisfaction score
          example: 200
        subject:
          $ref: '#/components/schemas/Subject'
        hocKy:
          type: number
          description: Hoc ky of Satisfaction score
          example: 200
        diemHaiLong:
          type: number
          description: Diem hai long of Satisfaction score
          example: 200
    Subject:
      description: Subject
      type: object
      properties:
        maMon:
          type: string
          description: Ma mon of Subject
          example: 'maMon'
        subjectGroup:
          $ref: '#/components/schemas/SubjectGroup'
        tenMon:
          type: string
          description: Subject
          example: 'tenMon'
        soTietLyThuyet:
          type: number
          description: So tiet ly thuyet of Subject
          example: 200
        soTietThucHanh:
          type: number
          description: So tiet thuc hanh of Subject
          example: 200
    SubjectGroup:
      description: Subject group
      type: object
      properties:
        maNhom:
          type: string
          description: Ma nhom of Subject group
          example: 'maNhom'
        tenNhom:
          type: string
          description: Subject group
          example: 'tenNhom'

    LoginRequest:
      type: object
      required:
        - inputUserName
        - inputPassword
      properties:
        inputUserName:
          description: User name of user
          type: string
          example: 'username'
          maxLength: 200
        inputPassword:
          description: Password of user
          type: string
          example: '123456'
          maxLength: 64
    UserResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
          example: 200
        results:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
            userRoles:
              description: Roles of User
              type: string
              example: '123456'
    User:
      description: User
      type: object
      properties:
        UserID:
          description: UserID of User
          type: string
          example: '123456'
        UserName:
          description: UserName of User
          type: string
          example: '123456'
        EmployeeID:
          description: EmployeeID of User
          type: string
          example: '123456'
        Password:
          description: Password of User
          type: string
          example: '123456'
        isManagerment:
          description: User is Management
          type: string
          example: '123456'

  #    End here

  responses:
    webApiValidationError:
      description: webApi input value validation failure
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/WebApiErrorResponse'
            properties:
              status:
                example: 400
    400:
      description: Format check failed
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
            properties:
              status:
                example: 400
              error:
                example: Bad Request
    401:
      description: Restrict access
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
            properties:
              status:
                example: 401
              error:
                example: Unauthorized
    403:
      description: Access request denied
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
            properties:
              status:
                example: 403
              error:
                example: Forbidden
    404:
      description: Page not found
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
            properties:
              status:
                example: 404
              error:
                example: Not Found
    500:
      description: The server is having problems
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
            properties:
              status:
                example: 500
              error:
                example: Internal Server Error
  headers:
    Content-Disposition:
      schema:
        type: string